name: Continuous Integration

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master]

jobs:
  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [workfolio, ai-backend, arachne]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Node.js for workfolio
        if: matrix.service == 'workfolio'
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: workfolio/package-lock.json

      - name: Setup Node.js for ai-backend
        if: matrix.service == 'ai-backend'
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: services/ai-backend/package-lock.json

      - name: Install dependencies (workfolio)
        if: matrix.service == 'workfolio'
        working-directory: workfolio
        run: npm ci

      - name: Install dependencies (ai-backend)
        if: matrix.service == 'ai-backend'
        working-directory: services/ai-backend
        run: npm ci

      - name: Setup Go (for arachne)
        if: matrix.service == 'arachne'
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
          cache: true
          cache-dependency-path: services/arachne/go.sum

      - name: Lint and test (workfolio)
        if: matrix.service == 'workfolio'
        working-directory: workfolio
        run: |
          npm run lint
          npm run test

      - name: Lint and test (ai-backend)
        if: matrix.service == 'ai-backend'
        working-directory: services/ai-backend
        run: |
          npm run lint
          npm run test

      - name: Lint and test (arachne)
        if: matrix.service == 'arachne'
        working-directory: services/arachne
        run: |
          go vet ./...
          go test ./...

  build-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build workfolio image
        working-directory: workfolio
        run: |
          docker build -t workfolio:ci .
          docker build -f Dockerfile.dev -t workfolio:ci-dev .

      - name: Build ai-backend image
        working-directory: services/ai-backend
        run: |
          docker build -t ai-backend:ci .
          docker build -f Dockerfile.dev -t ai-backend:ci-dev .

      - name: Build arachne image
        working-directory: services/arachne
        run: docker build -t arachne:ci .

      - name: Build infrastructure images
        working-directory: infrastructure
        run: |
          # Test that the main docker-compose can build
          docker-compose build --no-cache

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-images

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"
