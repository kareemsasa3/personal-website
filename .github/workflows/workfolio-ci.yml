name: Build & Publish Images

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build-workfolio:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          # Use SSH for submodules
          ssh-key: ${{ secrets.SUBMODULE_SSH_KEY }}
          ssh-strict: true

      - name: Verify submodule checkout
        run: |
          git submodule status || true
          git submodule sync --recursive
          git submodule update --init --recursive
          ls -la
          ls -la workfolio
          test -f workfolio/Dockerfile && echo "Found workfolio/Dockerfile" || (echo "Missing workfolio/Dockerfile" && exit 1)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR (main/master only)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Workfolio image (local, PRs only)
        if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master'
        uses: docker/build-push-action@v5
        with:
          context: ./workfolio
          load: true
          push: false
          tags: |
            workfolio:ci
          build-args: |
            VITE_TURNSTILE_SITE_KEY=${{ secrets.VITE_TURNSTILE_SITE_KEY }}
            VITE_AI_BACKEND_URL=/api/ai

      - name: Build and push Workfolio image (GHCR, main/master only)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v5
        with:
          context: ./workfolio
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/workfolio:${{ github.sha }}
            ghcr.io/${{ github.repository }}/workfolio:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/workfolio:latest
          build-args: |
            VITE_TURNSTILE_SITE_KEY=${{ secrets.VITE_TURNSTILE_SITE_KEY }}
            VITE_AI_BACKEND_URL=/api/ai

      - name: Scan Workfolio image with Trivy (local)
        if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master'
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: image
          image-ref: workfolio:ci
          format: table
          severity: CRITICAL
          exit-code: 1

      - name: Scan Workfolio image with Trivy (remote)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: image
          image-ref: ghcr.io/${{ github.repository }}/workfolio:${{ github.sha }}
          format: table
          severity: CRITICAL
          exit-code: 1

      # Alternative: build from within the submodule directory
      # - name: Build (working-directory: workfolio)
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: ./workfolio
      #     file: ./workfolio/Dockerfile
      #     load: true
      #     tags: workfolio:ci
      #     build-args: |
      #       VITE_TURNSTILE_SITE_KEY=${{ secrets.VITE_TURNSTILE_SITE_KEY }}
      #       VITE_AI_BACKEND_URL=${{ secrets.VITE_AI_BACKEND_URL }}

  build-ai-backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          ssh-key: ${{ secrets.SUBMODULE_SSH_KEY }}
          ssh-strict: true
      - name: Verify submodule checkout (ai-backend)
        run: |
          git submodule status || true
          git submodule sync --recursive
          git submodule update --init --recursive
          ls -la
          ls -la services
          ls -la services/ai-backend
          test -f services/ai-backend/Dockerfile && echo "Found services/ai-backend/Dockerfile" || (echo "Missing services/ai-backend/Dockerfile" && exit 1)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR (main/master only)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build ai-backend image (local, PRs only)
        if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master'
        uses: docker/build-push-action@v5
        with:
          context: ./services/ai-backend
          load: true
          push: false
          tags: |
            ai-backend:ci

      - name: Build and push ai-backend image (GHCR, main/master only)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v5
        with:
          context: ./services/ai-backend
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/ai-backend:${{ github.sha }}
            ghcr.io/${{ github.repository }}/ai-backend:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/ai-backend:latest

      - name: Scan ai-backend image with Trivy (local)
        if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master'
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: image
          image-ref: ai-backend:ci
          format: table
          severity: CRITICAL
          exit-code: 1

      - name: Scan ai-backend image with Trivy (remote)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: image
          image-ref: ghcr.io/${{ github.repository }}/ai-backend:${{ github.sha }}
          format: table
          severity: CRITICAL
          exit-code: 1

  build-arachne:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          ssh-key: ${{ secrets.SUBMODULE_SSH_KEY }}
          ssh-strict: true
      - name: Verify submodule checkout (arachne)
        run: |
          git submodule status || true
          git submodule sync --recursive
          git submodule update --init --recursive
          ls -la
          ls -la services
          ls -la services/arachne
          test -f services/arachne/Dockerfile && echo "Found services/arachne/Dockerfile" || (echo "Missing services/arachne/Dockerfile" && exit 1)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR (main/master only)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build arachne image (local, PRs only)
        if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master'
        uses: docker/build-push-action@v5
        with:
          context: ./services/arachne
          load: true
          push: false
          tags: |
            arachne:ci

      - name: Build and push arachne image (GHCR, main/master only)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v5
        with:
          context: ./services/arachne
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/arachne:${{ github.sha }}
            ghcr.io/${{ github.repository }}/arachne:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/arachne:latest

      - name: Scan arachne image with Trivy (local)
        if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master'
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: image
          image-ref: arachne:ci
          format: table
          severity: CRITICAL
          exit-code: 1

      - name: Scan arachne image with Trivy (remote)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: image
          image-ref: ghcr.io/${{ github.repository }}/arachne:${{ github.sha }}
          format: table
          severity: CRITICAL
          exit-code: 1
