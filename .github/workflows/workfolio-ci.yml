name: CI - Build Workfolio

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build-workfolio:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
        # If your submodule is private in a different org, use a PAT with repo access instead:
        # with:
        #   submodules: recursive
        #   fetch-depth: 0
        #   token: ${{ secrets.CI_PAT }}
        # Or for SSH-based private submodule access, use a deploy key:
        # with:
        #   submodules: recursive
        #   fetch-depth: 0
        #   ssh-key: ${{ secrets.SUBMODULE_SSH_KEY }}
        #   ssh-known-hosts: github.com
        #   persist-credentials: false

      - name: Verify submodule checkout
        run: |
          git submodule status || true
          ls -la
          ls -la workfolio

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR (main/master only)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Workfolio image (Dockerfile in submodule)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: workfolio/Dockerfile
          load: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master' }}
          push: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
          tags: |
            workfolio:ci
            ghcr.io/${{ github.repository }}/workfolio:${{ github.sha }}
            ghcr.io/${{ github.repository }}/workfolio:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/workfolio:latest
          build-args: |
            VITE_TURNSTILE_SITE_KEY=${{ secrets.VITE_TURNSTILE_SITE_KEY }}
            VITE_AI_BACKEND_URL=${{ secrets.VITE_AI_BACKEND_URL }}

      - name: Scan Workfolio image with Trivy (local)
        if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master'
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: image
          image-ref: workfolio:ci
          format: table
          severity: CRITICAL,HIGH
          exit-code: 1

      - name: Scan Workfolio image with Trivy (remote)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: image
          image-ref: ghcr.io/${{ github.repository }}/workfolio:${{ github.sha }}
          format: table
          severity: CRITICAL,HIGH
          exit-code: 1

      # Alternative: build from within the submodule directory
      # - name: Build (working-directory: workfolio)
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: ./workfolio
      #     file: ./workfolio/Dockerfile
      #     load: true
      #     tags: workfolio:ci
      #     build-args: |
      #       VITE_TURNSTILE_SITE_KEY=${{ secrets.VITE_TURNSTILE_SITE_KEY }}
      #       VITE_AI_BACKEND_URL=${{ secrets.VITE_AI_BACKEND_URL }}

  build-ai-backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Verify ai-backend directory
        run: |
          ls -la services
          ls -la services/ai-backend
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR (main/master only)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build ai-backend image
        uses: docker/build-push-action@v5
        with:
          context: ./services/ai-backend
          file: ./services/ai-backend/Dockerfile
          load: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master' }}
          push: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
          tags: |
            ai-backend:ci
            ghcr.io/${{ github.repository }}/ai-backend:${{ github.sha }}
            ghcr.io/${{ github.repository }}/ai-backend:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/ai-backend:latest

      - name: Scan ai-backend image with Trivy (local)
        if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master'
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: image
          image-ref: ai-backend:ci
          format: table
          severity: CRITICAL,HIGH
          exit-code: 1

      - name: Scan ai-backend image with Trivy (remote)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: image
          image-ref: ghcr.io/${{ github.repository }}/ai-backend:${{ github.sha }}
          format: table
          severity: CRITICAL,HIGH
          exit-code: 1

  build-arachne:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Verify arachne directory
        run: |
          ls -la services
          ls -la services/arachne
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR (main/master only)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build arachne image
        uses: docker/build-push-action@v5
        with:
          context: ./services/arachne
          file: ./services/arachne/Dockerfile
          load: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master' }}
          push: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
          tags: |
            arachne:ci
            ghcr.io/${{ github.repository }}/arachne:${{ github.sha }}
            ghcr.io/${{ github.repository }}/arachne:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/arachne:latest

      - name: Scan arachne image with Trivy (local)
        if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master'
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: image
          image-ref: arachne:ci
          format: table
          severity: CRITICAL,HIGH
          exit-code: 1

      - name: Scan arachne image with Trivy (remote)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: image
          image-ref: ghcr.io/${{ github.repository }}/arachne:${{ github.sha }}
          format: table
          severity: CRITICAL,HIGH
          exit-code: 1
