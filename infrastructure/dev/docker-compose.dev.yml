services:
  # AI Backend - Development mode with live reloading
  ai-backend:
    build:
      context: ../services/ai-backend
      dockerfile: Dockerfile.dev
    environment:
      - NODE_ENV=${DEV_NODE_ENV:-development}
      - PORT=${DEV_AI_BACKEND_PORT:-3001}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    volumes:
      - ../services/ai-backend:/app
      - /app/node_modules
    command: npm run dev
    ports:
      - "${DEV_AI_BACKEND_PORT:-3001}:${DEV_AI_BACKEND_PORT:-3001}"

  # Workfolio - Development mode with live reloading
  workfolio:
    build:
      context: ../workfolio
      dockerfile: Dockerfile.dev
    environment:
      - NODE_ENV=${DEV_NODE_ENV:-development}
      - VITE_AI_BACKEND_URL=${VITE_AI_BACKEND_URL:-http://localhost:3001}
    volumes:
      - ../workfolio:/app
      - /app/node_modules
    command: npm run dev -- --host --no-open
    ports:
      - "${DEV_WORKFOLIO_PORT:-3000}:${DEV_WORKFOLIO_PORT:-3000}"

  # Arachne - Development mode with live reloading
  arachne:
    build:
      context: ../services/arachne
      dockerfile: ../../infrastructure/dev/arachne.Dockerfile
    environment:
      - SCRAPER_REDIS_ADDR=${ARACHNE_REDIS_ADDR:-redis:6379}
      - SCRAPER_REDIS_DB=${ARACHNE_REDIS_DB:-0}
      - SCRAPER_ENABLE_METRICS=${ARACHNE_ENABLE_METRICS:-true}
      - SCRAPER_ENABLE_LOGGING=${ARACHNE_ENABLE_LOGGING:-true}
      - SCRAPER_LOG_LEVEL=${ARACHNE_DEV_LOG_LEVEL:-debug}
      - SCRAPER_MAX_CONCURRENT=${ARACHNE_DEV_MAX_CONCURRENT:-3}
      - SCRAPER_REQUEST_TIMEOUT=${ARACHNE_DEV_REQUEST_TIMEOUT:-60s}
      - SCRAPER_TOTAL_TIMEOUT=${ARACHNE_DEV_TOTAL_TIMEOUT:-90s}
      - SCRAPER_USE_HEADLESS=${ARACHNE_USE_HEADLESS:-true}
    volumes:
      - ../services/arachne:/app
      - ../infrastructure/dev/arachne.air.toml:/app/.air.toml:ro
    command: air
    ports:
      - "${DEV_ARACHNE_PORT:-8080}:${DEV_ARACHNE_PORT:-8080}"

  # Disable redis-commander in dev by default (profile-only)
  redis-commander:
    profiles: ["monitoring"]

  # Nginx - Always running in development mode
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/default.dev.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
    depends_on:
      - workfolio
      - ai-backend
      - arachne
