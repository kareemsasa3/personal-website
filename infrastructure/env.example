# =============================================================================
# PORTFOLIO ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and update the values according to your setup
# cp env.example .env

# =============================================================================
# DOMAIN CONFIGURATION
# =============================================================================
# Your primary domain name (e.g., yourdomain.com)
DOMAIN_NAME=your-domain.com

# Email for SSL certificate notifications
SSL_EMAIL=your-email@example.com

# =============================================================================
# AI BACKEND CONFIGURATION
# =============================================================================
# Google Gemini API Key for AI chat functionality
GEMINI_API_KEY=your-gemini-api-key-here

# AI Backend service configuration
AI_BACKEND_PORT=3001
AI_BACKEND_NODE_ENV=production
AI_BACKEND_LOG_LEVEL=info
AI_BACKEND_ENABLE_METRICS=true
AI_BACKEND_RATE_LIMIT_WINDOW_MS=900000
AI_BACKEND_RATE_LIMIT_MAX_REQUESTS=100

# Redis URL for quotas (optional in dev; required for per-IP daily limits)
AI_BACKEND_REDIS_URL=redis://redis:6379/0

# Per-IP daily request limit for AI chat (enforced by the backend)
# Default is 50 if unset
AI_DAILY_LIMIT=50

# CORS configuration for AI Backend (production recommended)
# Comma-separated list of allowed origins (e.g., https://your-domain.com,https://www.your-domain.com)
CORS_ALLOW_ORIGIN=https://your-domain.com
# Allowed HTTP methods for CORS preflight and requests
CORS_ALLOW_METHODS=GET, POST, OPTIONS
# Allowed headers the client may send
CORS_ALLOW_HEADERS=DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization

# =============================================================================
# ARACHNE SCRAPER CONFIGURATION
# =============================================================================
# Redis configuration for Arachne
ARACHNE_REDIS_ADDR=redis:6379
ARACHNE_REDIS_DB=0

# Scraper settings
ARACHNE_ENABLE_METRICS=true
ARACHNE_ENABLE_LOGGING=true
ARACHNE_LOG_LEVEL=info
ARACHNE_MAX_CONCURRENT=10
ARACHNE_REQUEST_TIMEOUT=120s
ARACHNE_TOTAL_TIMEOUT=180s
ARACHNE_USE_HEADLESS=true
# Headless browser security flags (defaults are secure)
# Set to true only for testing scenarios
ARACHNE_HEADLESS_IGNORE_CERT_ERRORS=false
ARACHNE_HEADLESS_NO_SANDBOX=false
ARACHNE_USER_AGENT=Mozilla/5.0 (compatible; PortfolioBot/1.0)
ARACHNE_RATE_LIMIT=2
ARACHNE_RATE_LIMIT_WINDOW=1s
# Optional API token to protect /api/scrape endpoints (recommended in prod)
ARACHNE_API_TOKEN=

# Development scraper settings (overrides production values)
ARACHNE_DEV_LOG_LEVEL=debug
ARACHNE_DEV_MAX_CONCURRENT=3
ARACHNE_DEV_REQUEST_TIMEOUT=60s
ARACHNE_DEV_TOTAL_TIMEOUT=90s

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
# Redis server configuration
REDIS_PORT=6379
REDIS_MAX_MEMORY=512mb
REDIS_MAX_MEMORY_POLICY=allkeys-lru

# Redis Commander (optional management UI)
REDIS_COMMANDER_ENABLED=true
REDIS_COMMANDER_PORT=8081

# =============================================================================
# WORKFOLIO FRONTEND CONFIGURATION
# =============================================================================
# Frontend environment
WORKFOLIO_NODE_ENV=production
WORKFOLIO_PORT=3000

# API base URL for frontend (used by Vite)
VITE_AI_BACKEND_URL=https://your-domain.com/api/ai

# Cloudflare Turnstile site key (public). Leave blank for dev fallback.
VITE_TURNSTILE_SITE_KEY=

# Signed session tokens (required in prod). Use a strong random string.
SESSION_TOKEN_SECRET=

# Cloudflare Turnstile secret key (server-side). Required if site key is set.
TURNSTILE_SECRET=

# =============================================================================
# NGINX CONFIGURATION
# =============================================================================
# Nginx ports
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

# SSL certificate paths (managed by certbot)
SSL_CERT_PATH=/etc/nginx/ssl/cert.pem
SSL_KEY_PATH=/etc/nginx/ssl/key.pem

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================
# Docker network configuration
DOCKER_NETWORK_NAME=portfolio-network
DOCKER_NETWORK_SUBNET=172.20.0.0/16

# Container resource limits
NGINX_MEMORY_LIMIT=256M
NGINX_CPU_LIMIT=0.5
WORKFOLIO_MEMORY_LIMIT=512M
WORKFOLIO_CPU_LIMIT=1.0
AI_BACKEND_MEMORY_LIMIT=1G
AI_BACKEND_CPU_LIMIT=1.0
ARACHNE_MEMORY_LIMIT=2G
ARACHNE_CPU_LIMIT=1.0
REDIS_MEMORY_LIMIT=1G
REDIS_CPU_LIMIT=1.0

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================
# Development environment overrides
DEV_NODE_ENV=development
DEV_AI_BACKEND_PORT=3001
DEV_WORKFOLIO_PORT=3000
DEV_ARACHNE_PORT=8080

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log file settings
LOG_MAX_SIZE=10m
LOG_MAX_FILES=3

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# CORS settings
CORS_ALLOW_ORIGIN=*
CORS_ALLOW_METHODS=GET, POST, OPTIONS
CORS_ALLOW_HEADERS=DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization

# Rate limiting
API_RATE_LIMIT_BURST=20
SCRAPER_RATE_LIMIT_BURST=10 